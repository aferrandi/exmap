
==================== FINAL INTERFACE ====================
2018-01-18 07:06:34.686561182 UTC

interface main@main:Paths 8002
  interface hash: a1b7ef11c9fdb7c3659d322ac57decf1
  ABI hash: 326c42bfbeaa2cb90439554594d77d0c
  export-list hash: 7b230f844f66b2a32955151a16872b2c
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: d426797dced5f2cc541098c0bd9180c3
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths.allProjectsPath
  Paths.calculationPath
  Paths.logPath
  Paths.projectDir
  Paths.projectPath
  Paths.viewPath
  Paths.xMapPath
module dependencies: ApplicationTypes Calculation Errors Formula
                     OperationTypes Project View XFunction XMapTypes XValues
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-prim-0.5.0.0 integer-gmp-1.0.0.1
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00*
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.IO eb504c57b397cf133849f8586f15dafb
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  filepath-1.4.1.1@filepath-1.4.1.1:System.FilePath a3d1d13ac7dd86705b5dfaf58a5c0b9e
import  -/  filepath-1.4.1.1@filepath-1.4.1.1:System.FilePath.Posix 6a5e3ee74184fdcc5da09a368e7c40f5
import  -/  Calculation 51545031305913fd47c825885d93bfc2
  exports: 5c332b8fd8fef070186c5200f58f2914
  CalculationName 33a8590d875a915188f9bbf7f53d4cad
  CalculationName 7681f69b2581ed31254c1a456f024695
import  -/  Project 8ddbc555c991d908c26bf4ebc2b3413a
  exports: 37bfb87e192e7fcbd3e19ef7bca9334e
  ProjectName 88a5198f7b44b8586232adf22e56ae2a
  ProjectName dc3277e72c5d1fd0c29f02dc48899838
import  -/  View 02361d7faa292e39c3bd07eb3d6b6b8e
  exports: 566a2406a41a78f1d65d3176e307799b
  ViewName 4c6aad1e74bc6f916c25f7eddf2c9eb8
  ViewName 105e058b0f915624ee10874cf1c9d091
import  -/  XMapTypes 83c3b05a6c33968c2e0bd82cfc322a5e
  exports: 63a1ffc24fb40991afaa24415fd501be
  XMapName 0be109e6102724ac02eab934889766c9
  XMapName aed4e1c98ee09424176ec799b4e99672
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text 28074c70d3351fb3368d27c0a438ae07
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show 516b88f1e0e0dbed91cb925542602306
336080a8eb2f69fdc07ddb98007e0588
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Paths.$trModule2 Paths.$trModule1) -}
b36789aa9a37f66161dc2105f54e688a
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Paths"#) -}
e56e8beae978bb2a87dd0b76cff70ba7
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
7c0bd279416063dfe7446d47dd11b8ec
  $wcalculationPath ::
    GHC.IO.FilePath
    -> Project.ProjectName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.IO.FilePath
  {- Arity: 5, Strictness: <L,1*U><L,1*U(U,U,U)><L,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: GHC.IO.FilePath)
                   (w1 :: Project.ProjectName)
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#) ->
                 let {
                   end :: GHC.Prim.Int# = GHC.Prim.+# ww1 ww2
                 } in
                 letrec {
                   $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 end) of wild1 {
                       GHC.Types.False
                       -> case GHC.Prim.indexWord16Array# ww ww3 of r# { DEFAULT ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.geWord# r# 55296##) of wild2 {
                            GHC.Types.False
                            -> GHC.Types.:
                                 @ GHC.Types.Char
                                 (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                 ($wunfold (GHC.Prim.+# ww3 1#))
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.leWord# r# 56319##) of wild3 {
                                 GHC.Types.False
                                 -> GHC.Types.:
                                      @ GHC.Types.Char
                                      (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                      ($wunfold (GHC.Prim.+# ww3 1#))
                                 GHC.Types.True
                                 -> case GHC.Prim.indexWord16Array#
                                           ww
                                           (GHC.Prim.+# ww3 1#) of r#1 { DEFAULT ->
                                    GHC.Types.:
                                      @ GHC.Types.Char
                                      (GHC.Types.C#
                                         (GHC.Prim.chr#
                                            (GHC.Prim.+#
                                               (GHC.Prim.+#
                                                  (GHC.Prim.uncheckedIShiftL#
                                                     (GHC.Prim.-# (GHC.Prim.word2Int# r#) 55296#)
                                                     10#)
                                                  (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                               65536#)))
                                      ($wunfold (GHC.Prim.+# ww3 2#)) } } } }
                       GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                 } in
                 System.FilePath.Posix.combine
                   (Paths.projectDir w w1)
                   (System.FilePath.Posix.addExtension
                      ($wunfold ww1)
                      Paths.calculationPath1)) -}
749236c4e36168e6e830df21e7350ac9
  $wprojectDir ::
    GHC.IO.FilePath
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.IO.FilePath
  {- Arity: 4, Strictness: <L,1*U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.IO.FilePath)
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#) ->
                 let {
                   end :: GHC.Prim.Int# = GHC.Prim.+# ww1 ww2
                 } in
                 letrec {
                   $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 end) of wild1 {
                       GHC.Types.False
                       -> case GHC.Prim.indexWord16Array# ww ww3 of r# { DEFAULT ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.geWord# r# 55296##) of wild2 {
                            GHC.Types.False
                            -> GHC.Types.:
                                 @ GHC.Types.Char
                                 (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                 ($wunfold (GHC.Prim.+# ww3 1#))
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.leWord# r# 56319##) of wild3 {
                                 GHC.Types.False
                                 -> GHC.Types.:
                                      @ GHC.Types.Char
                                      (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                      ($wunfold (GHC.Prim.+# ww3 1#))
                                 GHC.Types.True
                                 -> case GHC.Prim.indexWord16Array#
                                           ww
                                           (GHC.Prim.+# ww3 1#) of r#1 { DEFAULT ->
                                    GHC.Types.:
                                      @ GHC.Types.Char
                                      (GHC.Types.C#
                                         (GHC.Prim.chr#
                                            (GHC.Prim.+#
                                               (GHC.Prim.+#
                                                  (GHC.Prim.uncheckedIShiftL#
                                                     (GHC.Prim.-# (GHC.Prim.word2Int# r#) 55296#)
                                                     10#)
                                                  (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                               65536#)))
                                      ($wunfold (GHC.Prim.+# ww3 2#)) } } } }
                       GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                 } in
                 System.FilePath.Posix.combine w ($wunfold ww1)) -}
ef37f241339604745f8fc295a785a805
  $wviewPath ::
    GHC.IO.FilePath
    -> Project.ProjectName
    -> GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.IO.FilePath
  {- Arity: 5, Strictness: <L,1*U><L,1*U(U,U,U)><L,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: GHC.IO.FilePath)
                   (w1 :: Project.ProjectName)
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#) ->
                 let {
                   end :: GHC.Prim.Int# = GHC.Prim.+# ww1 ww2
                 } in
                 letrec {
                   $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww3 :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 end) of wild1 {
                       GHC.Types.False
                       -> case GHC.Prim.indexWord16Array# ww ww3 of r# { DEFAULT ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.geWord# r# 55296##) of wild2 {
                            GHC.Types.False
                            -> GHC.Types.:
                                 @ GHC.Types.Char
                                 (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                 ($wunfold (GHC.Prim.+# ww3 1#))
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.leWord# r# 56319##) of wild3 {
                                 GHC.Types.False
                                 -> GHC.Types.:
                                      @ GHC.Types.Char
                                      (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                      ($wunfold (GHC.Prim.+# ww3 1#))
                                 GHC.Types.True
                                 -> case GHC.Prim.indexWord16Array#
                                           ww
                                           (GHC.Prim.+# ww3 1#) of r#1 { DEFAULT ->
                                    GHC.Types.:
                                      @ GHC.Types.Char
                                      (GHC.Types.C#
                                         (GHC.Prim.chr#
                                            (GHC.Prim.+#
                                               (GHC.Prim.+#
                                                  (GHC.Prim.uncheckedIShiftL#
                                                     (GHC.Prim.-# (GHC.Prim.word2Int# r#) 55296#)
                                                     10#)
                                                  (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                               65536#)))
                                      ($wunfold (GHC.Prim.+# ww3 2#)) } } } }
                       GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                 } in
                 System.FilePath.Posix.combine
                   (Paths.projectDir w w1)
                   (System.FilePath.Posix.addExtension
                      ($wunfold ww1)
                      Paths.viewPath1)) -}
79ed3c954b712528343807d0b61d97d8
  allProjectsPath :: GHC.IO.FilePath -> GHC.IO.FilePath
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (root :: GHC.IO.FilePath) ->
                 System.FilePath.Posix.combine root Paths.allProjectsPath1) -}
c39286148916b4690bcd89ca980d710f
  allProjectsPath1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "allProjects.ex"#) -}
5d446fe19740d784f30b70131c573b86
  calculationPath ::
    GHC.IO.FilePath
    -> Project.ProjectName
    -> Calculation.CalculationName
    -> GHC.IO.FilePath
  {- Arity: 3, Strictness: <L,1*U><L,1*U(U,U,U)><S(LSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.IO.FilePath)
                   (w1 :: Project.ProjectName)
                   (w2 :: Calculation.CalculationName) ->
                 case w2
                        `cast`
                      (Calculation.N:CalculationName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Paths.$wcalculationPath w w1 ww1 ww2 ww3 }) -}
d5bef6d87487558a9e726b475a2353e9
  calculationPath1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "clc"#) -}
568c1ac93c67da1c129d4331c6a5543e
  logPath :: GHC.IO.FilePath -> GHC.IO.FilePath
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (root :: GHC.IO.FilePath) ->
                 System.FilePath.Posix.combine root Paths.logPath1) -}
405af405cbcd24f37d8281c6c14a3199
  logPath1 :: GHC.IO.FilePath
  {- Unfolding: (System.FilePath.Posix.addExtension
                   Paths.logPath3
                   Paths.logPath2) -}
1715a22fa5cd45af7f399a419fbc8293
  logPath2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "log"#) -}
622ec490d002c9c0b716ef7bb52b1059
  logPath3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "exmap"#) -}
f003e4b449c0a571cc3414fcac50ab5b
  projectDir ::
    GHC.IO.FilePath -> Project.ProjectName -> GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,1*U><S(LSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.IO.FilePath) (w1 :: Project.ProjectName) ->
                 case w1
                        `cast`
                      (Project.N:ProjectName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Paths.$wprojectDir w ww1 ww2 ww3 }) -}
f7fe536b3e5d4c1b134c7116a4e49f50
  projectPath ::
    GHC.IO.FilePath -> Project.ProjectName -> GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,1*U><L,1*U(U,U,U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (root :: GHC.IO.FilePath) (pn :: Project.ProjectName) ->
                 System.FilePath.Posix.combine
                   (Paths.projectDir root pn)
                   Paths.projectPath1) -}
9551c08171577f915b697903c0c940f6
  projectPath1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "project.ex"#) -}
d89e64586051443c7421a56ef6e947eb
  viewPath ::
    GHC.IO.FilePath
    -> Project.ProjectName -> View.ViewName -> GHC.IO.FilePath
  {- Arity: 3, Strictness: <L,1*U><L,1*U(U,U,U)><S(LSS),1*U(U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.IO.FilePath)
                   (w1 :: Project.ProjectName)
                   (w2 :: View.ViewName) ->
                 case w2
                        `cast`
                      (View.N:ViewName[0]) of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                 Paths.$wviewPath w w1 ww1 ww2 ww3 }) -}
10de2056092a60c393b62ea20924ebb5
  viewPath1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "vew"#) -}
8b479787baaf93bed823d89ff2679dfe
  xMapPath ::
    GHC.IO.FilePath
    -> Project.ProjectName -> XMapTypes.XMapName -> GHC.IO.FilePath
  {- Arity: 3, Strictness: <L,1*U><L,1*U(U,U,U)><S,1*U>,
     Unfolding: (\ (root :: GHC.IO.FilePath)
                   (pn :: Project.ProjectName)
                   (ds :: XMapTypes.XMapName) ->
                 System.FilePath.Posix.combine
                   (Paths.projectDir root pn)
                   (System.FilePath.Posix.addExtension
                      (System.FilePath.Posix.joinPath_go
                         (GHC.Base.map
                            @ Data.Text.Internal.Text
                            @ [GHC.Types.Char]
                            Data.Text.Show.unpack
                            ds `cast` (XMapTypes.N:XMapName[0])))
                      Paths.xMapPath1)) -}
b76170aeb378929af8dc0e41d52da0f1
  xMapPath1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "map"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

