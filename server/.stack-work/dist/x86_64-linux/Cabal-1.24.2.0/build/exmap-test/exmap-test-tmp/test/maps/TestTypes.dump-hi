
==================== FINAL INTERFACE ====================
2017-08-25 19:18:56.462503356 UTC

interface main@main:TestTypes 8002
  interface hash: 5be0b65cc6f0dccc25ece9f854277ba3
  ABI hash: a7ba4fe5bb75422eeb34d0373c7625aa
  export-list hash: 538f4230420c1e7a277e50df0fd490f2
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 7acd5f3089776323fb7bd523eaeb424f
  sig of: Nothing
  used TH splices: False
  where
exports:
  TestTypes.mapName
  TestTypes.singletonXMap
module dependencies: Errors XMapTypes
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1*
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00*
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Strict f8f0196205d496398718e13b2f098e5d
import  -/  XMapTypes 563faea051c5702718c16507916fcff1
  exports: 63a1ffc24fb40991afaa24415fd501be
  XMap c2ed918b428722f1755c470b6338cf45
  XMapDouble 64dca8f535e90282d4c575c17aea9c9a
  XMapKey 9a8f689ba36840dff52b69a07d7eb5cf
  XMapName 0be109e6102724ac02eab934889766c9
  XMapName aed4e1c98ee09424176ec799b4e99672
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text 28074c70d3351fb3368d27c0a438ae07
7444205c238446f9ae695c0c8b5d37cf
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TestTypes.$trModule2
                   TestTypes.$trModule1) -}
d775151d22aec8a97c3fccdf80a9b0fe
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "TestTypes"#) -}
e268306ca8683d954306e5ea97b3b422
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
53bf2251f8b6bfc814e0e0ab7dd59ee4
  $wouter ::
    GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
    -> GHC.Prim.Int#
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U><L,U><S,1*U><S,U><S,U>,
     Inline: [0] -}
c83048f7179874110825b30fa89b1aef
  $wsingletonXMap ::
    GHC.Base.String
    -> GHC.Types.Double -> (# XMapTypes.MapValue GHC.Types.Double #)
  {- Arity: 2, Strictness: <L,1*U><L,1*U(U)>, Inline: [0],
     Unfolding: (\ (w :: GHC.Base.String) (w1 :: GHC.Types.Double) ->
                 (# case w1 of x1 { GHC.Types.D# ipv ->
                    case GHC.Magic.runRW#
                           @ 'GHC.Types.PtrRepLifted
                           @ Data.Text.Internal.Text
                           (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case GHC.Prim.newByteArray#
                                   @ GHC.Prim.RealWorld
                                   10#
                                   s1 of ds1 { (#,#) ipv1 ipv2 ->
                            TestTypes.$wouter ipv2 4# w 0# ipv1 }) of ds1 { (#,#) ipv1 ipv2 ->
                    case ipv2 of nt { Data.Text.Internal.Text ipv3 ipv4 ipv5 ->
                    Data.Map.Base.Bin
                      @ XMapTypes.XMapKey
                      @ GHC.Types.Double
                      1#
                      nt `cast` (Sym (XMapTypes.N:XMapKey[0]))
                      x1
                      (Data.Map.Base.Tip @ XMapTypes.XMapKey @ GHC.Types.Double)
                      (Data.Map.Base.Tip
                         @ XMapTypes.XMapKey
                         @ GHC.Types.Double) } } } #)) -}
d0f61e53a569858e1479cb4117ca27d7
  mapName :: [GHC.Base.String] -> XMapTypes.XMapName
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                TestTypes.mapName1
                  `cast`
                (<[GHC.Base.String]>_R ->_R Sym (XMapTypes.N:XMapName[0])) -}
901fc98e7411bc865aba7de68dd0bb61
  mapName1 :: [GHC.Base.String] -> [Data.Text.Internal.Text]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ss :: [GHC.Base.String]) ->
                 GHC.Base.build
                   @ Data.Text.Internal.Text
                   (\ @ b1
                      (c :: Data.Text.Internal.Text -> b1 -> b1)[OneShot]
                      (n :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Types.Char]
                      @ b1
                      (GHC.Base.mapFB
                         @ Data.Text.Internal.Text
                         @ b1
                         @ [GHC.Types.Char]
                         c
                         Data.Text.pack)
                      n
                      ss)) -}
f0eea3587855abcb41779d1eb204fde5
  singletonXMap ::
    GHC.Base.String -> GHC.Types.Double -> XMapTypes.XMap
  {- Arity: 2, Strictness: <L,1*U><L,1*U(U)>m1, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Base.String) (w1 :: GHC.Types.Double) ->
                 case TestTypes.$wsingletonXMap w w1 of ww { Unit# ww1 ->
                 XMapTypes.XMapDouble ww1 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

