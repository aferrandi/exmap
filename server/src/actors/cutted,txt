viewChansByNames :: EventChan -> [View] -> IO ViewChanByMapName
viewChansByNames evtChan vs = do
        rs <- atomically $ mapM viewToRuntime vs
        cs <- mapM (viewToChan evtChan) rs
        atomically $ chansByNames evtChan (zip rs cs)

chansByNames :: EventChan -> [(RuntimeView, ViewChan)] -> STM ViewChanByMapName
chansByNames evtChan rcs = do
        dc <- chanByDeps rcs
        let cs = M.fromList $ groupAssocListByKey dc
        return cs
     where chanByDeps :: [(RuntimeView,ViewChan)] -> STM [(XMapName, ViewChan)]
           chanByDeps rcs = do
                        cd <- mapM chansByDep rcs
                        return $ concat cd
           chansByDep :: (RuntimeView,ViewChan) -> STM [(XMapName, ViewChan)]
           chansByDep (vr, ch) = do
                        deps <- runtimeDependencies vr
                        return $ map (\dp -> (dp, ch)) deps
